
'use strict';

// function /* ←関数宣言*/
// myAlert(){//スペースを開けず単語を大文字にするキャメルケースが多く使われている
//     /* -ハイフンは使えないので注意*/

// alert('こんちは！');
// alert('Webの神様です');
// }
// // ------------------------------------------------------------------------
// myAlert();/* ←関数を呼び出す*/
// myAlert();
// myAlert();


/*
================================================================
================================================================
*/

// function myAlert(greeting)/*←引数*/{
// alert(greeting);
// alert('Webの神様です');

// }
// // myAlert('こんばんは~!');
// myAlert('おはよ！');
// myAlert('こんちは！');
// myAlert('こんばんは~~~~~~~!');

/*
================================================================
================================================================
*/

//引数の複数指定

// function myAlert(greeting,channelName)/*←引数*/{
//     alert(greeting);
//     alert(channelName + 'です');
    
//     }
// myAlert('おはよ！','Webの神様');

/*
================================================================
================================================================
*/

// function myAlert(greeting)/*←引数*/{
// alert(greeting);
// alert('Webの神様です');

// }
// myAlert();
// // 引数をしているにも関わらず引数を入れない場合はundefinedとなる
// // ↓


// function myAlert(greeting = 'ヤッホー'){
//     //↑「　引数　＝　default　」を設定することで、引数が指定されない場合default値が表示される
//     alert(greeting);
//     alert('Webの神様です');
    
//     }
    
//     myAlert();


/*
================================================================
================================================================
*/

// function myCalc(a,b){
//     return a + b;
// }
// alert(myCalc(1,2));

// 引数　→　投入する材料
// 関数　→　何かを作ってくれる便利なマシン
// 戻り値→　出来上がったもの


/*
================================================================
================================================================
*/

//無名関数→

// const myAlert = function(){
//     alert('こんちは！');
//     alert('これは無名関数の例です');

// }
// myAlert();//これは実行できる
// myAlert;//これは実行できない　（ ）を忘れない

// 関数宣言
// function myCalc(a,b){
//     return a + b;
// }
// alert(myCalc(1,2));

//無名関数を使った書き方

// const myCalc = function(a,b){
//     return a + b;
// }
// alert(myCalc(1,2));


/*
================================================================
================================================================
*/
// アロー関数
// ↑無名関数（関数式）をさらに簡単な書き方にする

// const myAlert = () =>{
//         alert('こんちは！');
//     alert('これはアロー関数の例です');
// }

// myAlert();

// 従来の関数式

// const myAlert = function(){
//     alert('こんちは！');
//     alert('これは無名関数の例です');

// }
// myAlert();


/*
アロー関数のルール
================================================================
・引数が一つだけだったら、その引数を囲むカッコを省略できる。
・（引数が2つ以上の場合はカッコが必要）
・関数の中身の処理が1行だけだったら、波カッコと「return」キーワードを省略できる
================================================================
*/
//従来
// const myAlert =function(message){
//     alert(message);
// }
// myAlert('こんちは！');

// //アロー関数　省略前
// const myAlert = (message) => {
//     alert(message);
// }
// myAlert('こんちは！');

//アロー関数　省略後
// const myAlert = message =>alert(message);
// myAlert('こんちは！');





// ・関数の中身の処理が1行だけだったら、波カッコと「return」キーワードを省略できる

// // //アロー関数　省略前
// const myCalc = (a) =>{
//     return a * a;
// }
// alert(myCalc(2));

// //アロー関数　省略後

const myCalc = a => a * a;

alert(myCalc(2));
